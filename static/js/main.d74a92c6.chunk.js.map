{"version":3,"sources":["reducers/action/actionInput.js","components/InputForm.js","components/ToDoList.js","reducers/action/actionEditList.js","reducers/action/actionList.js","App.js","store/initialState.js","reducers/reducer.js","store/store.js","index.js"],"names":["nextTodoId","InputForm","dispatch","useDispatch","className","onSubmit","event","preventDefault","taskName","data","target","elements","value","type","payload","id","done","name","placeholder","ToDoList","todos","useSelector","state","length","map","todo","onClick","App","initialState","reducer","action","newTodos","item","push","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"iOAMIA,EAAa,ECuBFC,EAxBG,WACd,IAAMC,EAAWC,cAUjB,OAAO,8BACH,uBAAMC,UAAY,OAAOC,SAVT,SAACC,GACjBA,EAAMC,iBACN,IDDgBC,ECCZC,EAAOH,EAAMI,OAAOC,SACI,KAAxBF,EAAKD,SAASI,QAClBV,GDHgBM,ECGCC,EAAKD,SAASI,MDHD,CACpCC,KAAM,WACNC,QAAS,CACPC,KAAMf,EACNQ,WACAQ,MAAM,MCDFP,EAAKD,SAASI,MAAQ,KAKtB,UACI,qBAAKR,UAAY,aAAjB,SACI,uBAAOA,UAAY,QAAQS,KAAO,OAAOI,KAAO,WAAWC,YAAc,yHAE7E,8BACI,wBAAQd,UAAY,MAAMS,KAAK,SAA/B,sECMDM,EAxBE,WACf,IAAMjB,EAAWC,cACXiB,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAI1C,OAAKA,GAAUA,EAAMG,OAInB,6BACGH,EAAMI,KAAI,SAAAC,GAAI,OACf,sBAAKrB,UAAY,iBAAjB,UACA,oBAAIA,UAAaqB,EAAKT,KAAO,iBAAkB,YAAaU,QAAW,kBATnDX,EASyEU,EAAKV,GATxEb,ECRM,CAClCW,KAAM,YACNC,QDM8CC,IAAxB,IAAAA,GASpB,SAAwGU,EAAKjB,WAC7G,sBAAMJ,UAAU,aAAasB,QAAW,kBAXxBX,EAW0CU,EAAKV,GAXzCb,EEPY,CACpCW,KAAM,cACNC,QFK4CC,IAA1B,IAAAA,GAWhB,iBAFyCU,EAAKV,SALzC,mBAAGX,UAAY,yBAAf,2GGQIuB,MAdf,WACE,OACE,sBAAKvB,UAAY,YAAjB,UACE,oGAIA,cAAC,EAAD,IACA,cAAC,EAAD,Q,cCRSwB,EALM,CACjBR,MAAO,ICuCIS,EAtCC,WAAmC,IAAlCP,EAAiC,uDAAzBM,EAAcE,EAAW,uCAC9C,OAAQA,EAAOjB,MACX,IAAK,WAAL,IACYO,EAAUE,EAAVF,MACJW,EAAWX,EAAMI,KAAI,SAAAQ,GAAI,OAAIA,KAEjC,OADAD,EAASE,KAAKH,EAAOhB,SACd,2BACAQ,GADP,IAEIF,MAAOW,IAGf,IAAK,cACD,OAAO,2BACAT,GADP,IAEIF,MAAOE,EAAMF,MAAMc,QAAO,SAAAT,GAAI,OAAIA,EAAKV,KAAOe,EAAOhB,aAG7D,IAAK,YACD,OAAO,2BACAQ,GADP,IAEIF,MAAOE,EAAMF,MAAMI,KAAI,SAAAC,GACnB,OAAIA,EAAKV,KAAOe,EAAOhB,QACd,2BAAKW,GAAZ,IACET,MAAOS,EAAKT,OAGPS,OAKrB,QACI,OAAOH,ICxBJa,EANDC,YACZP,EACAD,EACAS,OAAOC,8BAAgCD,OAAOC,gCCChDC,IAASC,OACL,cAAC,IAAD,CAAUL,MAASA,EAAnB,SACE,cAAC,EAAD,MAEJM,SAASC,eAAe,W","file":"static/js/main.d74a92c6.chunk.js","sourcesContent":["// export const addTask = (payload) => ({\r\n//     type: 'ADD_TODO',\r\n//     payload,\r\n\r\n// });\r\n\r\nlet nextTodoId = 0;\r\n\r\nexport const addTodo = (taskName) => ({\r\n  type: 'ADD_TODO',\r\n  payload: {\r\n    id: ++nextTodoId,\r\n    taskName,\r\n    done: false,\r\n  },\r\n});","import {useDispatch} from 'react-redux'\nimport {addTodo} from '../reducers/action/actionInput'\n// import ToDoList from './ToDoList';\n\n\nconst InputForm = () => {\n    const dispatch = useDispatch();\n    const formHandler = (event) => {\n        event.preventDefault();\n        let data = event.target.elements;\n        if (data.taskName.value !== '') {\n        dispatch(addTodo(data.taskName.value));\n        data.taskName.value = '';\n    }\n    }\n  \n    return <div>\n        <form className = 'form' onSubmit={formHandler}>\n            <div className = 'input-wrap'>\n                <input className = 'input' type = 'text' name = 'taskName' placeholder = 'Введите новую задачу....'/>\n            </div>\n            <div>\n                <button className = 'btn' type='submit'>ДОБАВИТЬ</button>\n            </div>\n        </form>\n    </div>\n}\n\n\nexport default InputForm\n\n","import {useDispatch, useSelector} from 'react-redux'\nimport {deleteTODO} from '../reducers/action/actionList'\nimport {editTODO} from '../reducers/action/actionEditList'\n\nconst ToDoList = () => {\n  const dispatch = useDispatch();\n  const todos  = useSelector(state => state.todos);\n  const handleClick = id => dispatch(deleteTODO(id));\n  const handleClickEdit = id => dispatch(editTODO(id));\n\n  if (!todos || !todos.length) {\n    return <p className = 'todo-item no-todo-item'>нет текущих задач</p>\n  }\n  return (\n    <ul>\n      {todos.map(todo => \n      <div className = \"todo-item-wrap\" key = {todo.id}>\n      <li className = {todo.done ? 'todo-item-done' :'todo-item'} onClick = {() => handleClickEdit(todo.id)}>{todo.taskName}</li>\n      <span className='btn-delete' onClick = {() => handleClick(todo.id)}>X</span>\n      </div>\n      )\n      }\n\n    </ul>\n  )\n};\n\n\nexport default ToDoList","export const editTODO = (payload) => ({\n    type: 'EDIT_TODO',\n    payload,\n\n});","export const deleteTODO = (payload) => ({\r\n    type: 'DELETE_TODO',\r\n    payload,\r\n\r\n});","import React from 'react';\nimport './App.css';\nimport InputForm from './components/InputForm'\nimport ToDoList from './components/ToDoList'\n\nfunction App() {\n  return (\n    <div className = 'container'> \n      <p>\n        СПИСОК ЗАДАЧ\n      </p>\n\n      <InputForm />\n      <ToDoList />\n\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    todos: [\r\n    ],\r\n}\r\n\r\nexport default initialState","import initialState from '../store/initialState'\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            const { todos } = state;\n            let newTodos = todos.map(item => item)\n            newTodos.push(action.payload)\n            return {\n                ...state,\n                todos: newTodos\n                };\n\n        case 'DELETE_TODO':\n            return {\n                ...state,\n                todos: state.todos.filter(todo => todo.id !== action.payload)\n                };\n              \n        case 'EDIT_TODO':\n            return {\n                ...state,\n                todos: state.todos.map(todo => {\n                    if (todo.id === action.payload) {\n                      return { ...todo,\n                        done: !todo.done\n                      }\n                    } else {\n                      return todo;\n                    }\n                })\n            }\n\n        default:\n            return state;\n        \n    }\n    \n}\n\nexport default reducer;\n\n","import { createStore } from 'redux'; \r\nimport reducer from '../reducers/reducer'; \r\nimport initialState from './initialState'\r\n\r\nconst store = createStore( \r\n  reducer, \r\n  initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() \r\n); \r\n \r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store/store'\n\n\nReactDOM.render(\n    <Provider store = {store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}